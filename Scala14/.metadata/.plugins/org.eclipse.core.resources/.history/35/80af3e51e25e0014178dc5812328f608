package week6

object polynomials {
  class Poly(val terms:Map[Int, Double]) {
  	def + (other: Poly) = new Poly( terms ++ (other.terms map adjust ))
  	override def toString = (for((exp,coef) <- terms.toList.sorted.reverse) yield coef+"X^"+exp) mkString "+"
  	
  	def adjust(term: (Int, Double)): (Int, Double) = {
  		val (exp, coef) = terms get exp
  	}
  }
  
  
  val m1 = Map("a"->1, "b"->3)
  val m2 = Map("c"->1, "b"->2)
  
  m1 ++ m2
  val v1 = new Poly(Map(1->2, 3 -> 4))
  v1.toString
  (for((e,t) <- m1) yield  t+"X^"+e) mkString "+"
}